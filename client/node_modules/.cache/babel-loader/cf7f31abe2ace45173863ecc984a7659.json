{"ast":null,"code":"import request from 'superagent';\nexport var PLAYLISTS_FETCHED = 'PLAYLISTS_FETCHED';\nexport var PLAYLIST_CREATE_SUCCESS = 'PLAYLIST_CREATE_SUCCESS';\nvar baseUrl = 'http://localhost:5000';\n\nvar playlistsFetched = function playlistsFetched(playlists) {\n  return {\n    type: PLAYLISTS_FETCHED,\n    playlists: playlists\n  };\n};\n\nvar PlaylistCreateSuccess = function PlaylistCreateSuccess(event) {\n  return {\n    type: PLAYLIST_CREATE_SUCCESS,\n    event: event\n  };\n};\n\nexport var loadPlaylists = function loadPlaylists() {\n  return function (dispatch, getState) {\n    if (getState().playlists) return;\n    request(\"\".concat(baseUrl, \"/playlists\")).then(function (response) {\n      dispatch(playlistsFetched(response.body));\n    }).catch(console.error);\n  };\n};\nexport var createPlaylist = function createPlaylist(data) {\n  return function (dispatch) {\n    request.post(\"\".concat(baseUrl, \"/playlists\")).send(data).then(function (response) {\n      dispatch(PlaylistCreateSuccess(response.body));\n    }).catch(console.error);\n  };\n};","map":{"version":3,"sources":["/home/ser/Documents/Codaisseur/class-22/homework/postgres-api/client/src/actions/playlists.js"],"names":["request","PLAYLISTS_FETCHED","PLAYLIST_CREATE_SUCCESS","baseUrl","playlistsFetched","playlists","type","PlaylistCreateSuccess","event","loadPlaylists","dispatch","getState","then","response","body","catch","console","error","createPlaylist","data","post","send"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,YAApB;AAEA,OAAO,IAAMC,iBAAiB,GAAG,mBAA1B;AACP,OAAO,IAAMC,uBAAuB,GAAG,yBAAhC;AAEP,IAAMC,OAAO,GAAG,uBAAhB;;AAEA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAAC,SAAS;AAAA,SAAK;AACrCC,IAAAA,IAAI,EAAEL,iBAD+B;AAErCI,IAAAA,SAAS,EAATA;AAFqC,GAAL;AAAA,CAAlC;;AAKA,IAAME,qBAAqB,GAAG,SAAxBA,qBAAwB,CAAAC,KAAK;AAAA,SAAK;AACtCF,IAAAA,IAAI,EAAEJ,uBADgC;AAEtCM,IAAAA,KAAK,EAALA;AAFsC,GAAL;AAAA,CAAnC;;AAKA,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB;AAAA,SAAM,UAACC,QAAD,EAAWC,QAAX,EAAwB;AACzD,QAAIA,QAAQ,GAAGN,SAAf,EAA0B;AAE1BL,IAAAA,OAAO,WAAIG,OAAJ,gBAAP,CACGS,IADH,CACQ,UAAAC,QAAQ,EAAI;AAChBH,MAAAA,QAAQ,CAACN,gBAAgB,CAACS,QAAQ,CAACC,IAAV,CAAjB,CAAR;AACD,KAHH,EAIGC,KAJH,CAISC,OAAO,CAACC,KAJjB;AAKD,GAR4B;AAAA,CAAtB;AAUP,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,IAAD;AAAA,SAAU,UAAAT,QAAQ,EAAI;AAClDV,IAAAA,OAAO,CACJoB,IADH,WACWjB,OADX,iBAEGkB,IAFH,CAEQF,IAFR,EAGGP,IAHH,CAGQ,UAAAC,QAAQ,EAAI;AAChBH,MAAAA,QAAQ,CAACH,qBAAqB,CAACM,QAAQ,CAACC,IAAV,CAAtB,CAAR;AACD,KALH,EAMGC,KANH,CAMSC,OAAO,CAACC,KANjB;AAOD,GAR6B;AAAA,CAAvB","sourcesContent":["import request from 'superagent'\n\nexport const PLAYLISTS_FETCHED = 'PLAYLISTS_FETCHED'\nexport const PLAYLIST_CREATE_SUCCESS = 'PLAYLIST_CREATE_SUCCESS'\n\nconst baseUrl = 'http://localhost:5000'\n\nconst playlistsFetched = playlists => ({\n  type: PLAYLISTS_FETCHED,\n  playlists\n})\n\nconst PlaylistCreateSuccess = event => ({\n  type: PLAYLIST_CREATE_SUCCESS,\n  event\n})\n\nexport const loadPlaylists = () => (dispatch, getState) => {\n  if (getState().playlists) return\n\n  request(`${baseUrl}/playlists`)\n    .then(response => {\n      dispatch(playlistsFetched(response.body))\n    })\n    .catch(console.error)\n}\n\nexport const createPlaylist = (data) => dispatch => {\n  request\n    .post(`${baseUrl}/playlists`)\n    .send(data)\n    .then(response => {\n      dispatch(PlaylistCreateSuccess(response.body))\n    })\n    .catch(console.error)\n}"]},"metadata":{},"sourceType":"module"}